1. Дайте определение NodeJS, используя минимальное число слов.
Програмная платформа, позволяющая JS взаимодействовать с устройствами
ввода-вывода и подключать внешние библиотеки.
nmp - менеджер пакетов для NodeJS

2. Отличия между средами NodeJS и браузера (любого)?
По процесссу обработки кода JS NodeJS схож с Google Chrome, поскольку
создан на том же движке V8
В отличии от браузеров в NodeJS есть возможность работы с устройствами
и библиотеками

4. Какова разница между вызовами:
npm install foo -g и npm install foo?
npm install foo и npm install foo --save?

Аргумент -g устанавливает пакеты гобально.
Пакет будет доступен всем приложениям
--save устанавливает пакет foo и вносит запись о нем в package.json
в секцию dependencies


Вопросы 2
1. Как добавить пустую папку под контроль GIT?
GIT настроен на отслеживание  файлов, поэтому пустую папка по контроль
поставить нельзя. Можно добавить в нее пустой файл, после этого папка
попадет под контроль.
Обычно в этих случайх добавля .gitkeep или .gitignore


2. Какие файлы и папки следует держать под контролем VCS? Должен ли GIT
отслеживать public? Должен ли GIT отслеживать node_modules?
Если на вопросы нет "правильного" ответа – распишите критерии выбора.
GIT не должен отслеживать node_modules.
Но все же на эти вопросы нет парвильного ответа.
Критерий: отслиживать файлы, которые имеют отношение к проекту
не включать промежуточные файлы для личного использования
не включать внешние библиотеке вроде node_modules или фреймфорки


3. Можно ли использовать VCS для отслеживания изменений в БД? Поясните ответ.
Нет.
VCS может фиксировать изменения в файлах текстового типа, но нет таблиц БД.
Для отслеживания БД можно использовать фреймворки или настраивать БД.
https://habrahabr.ru/post/221979/

4. В чём разница между понятиями "сайта" и "приложения"? Можно ли провести чёткую границу?
Сайт выполняют инфомрационную функцию. Способ донести информацию до пользователя.
Приложение подразумевает интерактивное взаимодействие с пользователем.
Поведение зависит от действий посетителя.
Поэтому границу можно провести исходя из поведения пользователя:
если пользователь заходит на сайт для получение информации - это сайт,
если пользователь заходит на сайт что-нибудь сделать/поменять - это приложение.
Или можно разделить по следующему критерию:
Открывается в браузере - сайт
Устанавливается на телефон/ноутбук/ПК - приложение


5. Какие основные отличия ES6 от ES5 вы бы назвали?
Я српанивал информацию по ссылке из задания http://es6-features.org/#Constants
и с сайта https://learn.javascript.ru/es-modern
Радикаотер новых нововведений я не заметил.
В ES6 развились расширения, добавленные в ES5
- Стрелочный функции
- Rest spread операторы и значений аргументов по умолчанию
- Строки-шаблоны в обратных кавычках
- Расширенные литералы. Возможность сравнения бинарного и десятеричного значения без функции parseInt()
- Расширенные свойства функций
- Деструктивное присваивание
- Возможность работы с молулями экспорт и импорт
- Классы
- Тип Symbol для создания уникальных идентификаторов
- Итераторы и генераторы
- Коллекции Map, Set, WeakMap, WeakSet
- Промисы
- Proxy
